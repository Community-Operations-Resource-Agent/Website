# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  AZURE_SOURCE_PATH: './DotNetCoreReactImplementation'    # set this to the path to your web app project, defaults to the repository root
  AZURE_OUTPUT_PATH: './output'    # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '3.1.201'              # set this to the dotnet version to use

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest
    
    steps:

    - name: 'Checkout GitHub Action'
      uses: actions/checkout@master

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 'Resolve Project Dependencies Using Dotnet'
      shell: pwsh
      run: |
        pushd './${{ env.AZURE_SOURCE_PATH }}'
        dotnet build --configuration Release --output ./output
        popd

# Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: App Service Web App Build
      uses: Azure/appservice-build@v2
      with:
        # Relative path (within the repository) to the source directory of the project you want to build; if no value is provided for this, the root of the repository ("GITHUB_WORKSPACE" environment variable) will be built.
        source-directory: './${{ env.AZURE_SOURCE_PATH }}'
        # Programming platform used to build the web app; if no value is provided, Oryx will determine the platform to build with. The supported values are "dotnet", "nodejs", "php" and "python".
        platform: dotnet
        # The directory where the build output has to be put.
        output-directory: './${{ env.AZURE_OUTPUT_PATH }}'

    # Deploy the website to an Azure App Service    
    - name: Deploy bits to ProjectCoraBot website, cora.org
      uses: Azure/webapps-deploy@v2.1
      with:
        # Name of the Azure Web App
        app-name: ProjejctCoraBot
        publish-profile: ${{ secrets.PROJECTCORAWEBSITE_PUBLISHPROFILE }}
        # Applies to Web App only: Path to package or folder. *.zip, *.war, *.jar or a folder to deploy
        package: './${{ env.AZURE_SOURCE_PATH }}'

