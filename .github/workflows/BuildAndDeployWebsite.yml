# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  AZURE_SOURCE_PATH: './DotNetCoreReactImplementation'    # set this to the path to your web app project, defaults to the repository root
  AZURE_OUTPUT_PATH: './output'    # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '3.1.201'              # set this to the dotnet version to use
  NODE_VERSION: '12.x'
  SOLUTION_FILE: 'MapVisualization.sln'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-deploy:
    # The type of runner that the job will run on
    runs-on: windows-latest
    
    steps:

    - name: 'Checkout GitHub Action'
      uses: actions/checkout@master

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Setup MSBuild Path
      uses: warrenbuckley/Setup-MSBuild@v1
       
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.2
     
    - name: Restore NuGet Packages
      run: nuget restore ${{ env.SOLUTION_FILE }}
 
    - name: Build and Publish Web App
      run: msbuild ${{ env.SOLUTION_FILE }} /p:Configuration=Release /p:DeployOnBuild=true /p:PublishProfile=FileSystem
 
    # Deploy the website to an Azure App Service    
    - name: Deploy bits to ProjectCoraBot website, cora.org
      uses: Azure/webapps-deploy@v2.1
      with:
        # Name of the Azure Web App
        app-name: ProjejctCoraBot
        publish-profile: ${{ secrets.PROJECTCORAWEBSITE_PUBLISHPROFILE }}
        # Applies to Web App only: Path to package or folder. *.zip, *.war, *.jar or a folder to deploy
        package: '${{ env.AZURE_OUTPUT_PATH }}'
